---

- name: Ensure persistent routes to N3 networks are present 
  lineinfile:
     line: "{{item}}"
     state: present
     path: /etc/network/interfaces
  with_items:
  - "up route add -net 192.168.8.0/24 gw {{n3gateway}}"
  - "up route add -net 10.16.16.0/24 gw {{n3gateway}}"
  when: n3gateway is defined
  register: netconf
  tags: [configuration, net]

- name: If persistent routes to N3 networks were not present, add temporary ones
  command: "{{item}}"
  with_items:
  - "route add -net 192.168.8.0/24 gw {{n3gateway}}"
  - "route add -net 10.16.16.0/24 gw {{n3gateway}}"
  when: n3gateway is defined and netconf|changed
  ignore_errors: true
  tags: [configuration, net]

#Dns-Settings
- name: Remove resolvconf
  apt: pkg=resolvconf state=absent
  tags: [packages,dns]

- name: Ensure dns servers are configured in /etc/resolv.conf
  template: src=resolv.conf.j2 dest=/etc/resolv.conf
  tags: [configuration,dns]

- name: Ensure dns servers are configured in dhclient.conf
  lineinfile:
     regexp: "#?(supersede|prepend) {{item.name}} "
     line: "{{dns_dhclient_rule}} {{item.name}} {{item.value}};"
     path: "{{dns_dhclient_file}}"
     state: present
  with_items:
    - { name: 'domain-name-servers', value: '{% for nameserver in dns_nameservers %}{{nameserver}}{% if not loop.last %},{% endif %}{% endfor %}' }
    - { name: 'domain-search', value: '{% for domain in domains %}"{{domain.name|lower}}"{% if not loop.last %},{% endif %}{% endfor %}' }

  when: item.value != ""
  tags: [configuration,dns]


- name: Install ntp
  apt: pkg=ntp state=present update_cache=yes
  tags: [packages,ntp]

- name: Configure one of AD-domains as ntp-server
  template: src=ntp.conf.j2 dest=/etc/ntp.conf
  notify: restart ntp
  tags: [configuration,ntp]


- name: Install prerequisites
  package: name={{item}} state=present
  with_items: 
   - sssd 
   - sssd-tools 
   - libsasl2-modules-ldap
   - adcli
   - krb5-user 
  tags: [packages,ad]


- name: Check if machine is alredy in bound
  shell: "/usr/bin/klist -e -k -t /etc/krb5.keytab | grep -i {{item.name}}"
  register: adcli_bound
  changed_when: false
  ignore_errors: true
  with_items: "{{domains}}"
  tags: [configuration,ad]



- name: Join Active Directory with adcli
  shell: "echo -n {{item.join_password}}|/usr/sbin/adcli join --domain={{item.name|lower}} --login-user={{item.join_account}} --os-name='{{ansible_distribution}} {{ansible_distribution_release}}' --os-version={{ansible_distribution_version}} --stdin-password"
  when: adcli_bound|failed
  register: ad_join
  with_items: "{{domains}}"
  tags: [configuration,ad]

- name: Configure sssd.conf
  template: 
   src: sssd.conf.j2 
   dest: /etc/sssd/sssd.conf
   owner: root
   group: root
   mode: 0600
  tags: [configuration,ad]
  notify: restart sssd

- name: Configure sudoers.d
  template: src=sudoers.sssd.conf.j2 dest=/etc/sudoers.d/sudoers.sssd.conf
  tags: [configuration,ad]


- name: Configure pam to autoreate homedirs
  lineinfile:
     line: "session required        pam_mkhomedir.so umask=0022 skel=/etc/skel"
     path: /etc/pam.d/common-session
     state: present

